# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _UT_Cache
else:
    import _UT_Cache

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _UT_Cache.delete_SwigPyIterator

    def value(self):
        return _UT_Cache.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _UT_Cache.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _UT_Cache.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _UT_Cache.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _UT_Cache.SwigPyIterator_equal(self, x)

    def copy(self):
        return _UT_Cache.SwigPyIterator_copy(self)

    def next(self):
        return _UT_Cache.SwigPyIterator_next(self)

    def __next__(self):
        return _UT_Cache.SwigPyIterator___next__(self)

    def previous(self):
        return _UT_Cache.SwigPyIterator_previous(self)

    def advance(self, n):
        return _UT_Cache.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _UT_Cache.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _UT_Cache.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _UT_Cache.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _UT_Cache.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _UT_Cache.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _UT_Cache.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _UT_Cache:
_UT_Cache.SwigPyIterator_swigregister(SwigPyIterator)
class DutBase(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    cycle = property(_UT_Cache.DutBase_cycle_get, _UT_Cache.DutBase_cycle_set)
    argc = property(_UT_Cache.DutBase_argc_get, _UT_Cache.DutBase_argc_set)
    argv = property(_UT_Cache.DutBase_argv_get, _UT_Cache.DutBase_argv_set)
    __swig_destroy__ = _UT_Cache.delete_DutBase

    def step(self, *args):
        return _UT_Cache.DutBase_step(self, *args)

    def finalize(self):
        return _UT_Cache.DutBase_finalize(self)

    def set_waveform(self, filename):
        return _UT_Cache.DutBase_set_waveform(self, filename)

    def set_coverage(self, filename):
        return _UT_Cache.DutBase_set_coverage(self, filename)

# Register DutBase in _UT_Cache:
_UT_Cache.DutBase_swigregister(DutBase)
class DutVerilatorBase(DutBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    top = property(_UT_Cache.DutVerilatorBase_top_get, _UT_Cache.DutVerilatorBase_top_set)

    def init(self, arg2, arg3):
        return _UT_Cache.DutVerilatorBase_init(self, arg2, arg3)

    def __init__(self, *args):
        _UT_Cache.DutVerilatorBase_swiginit(self, _UT_Cache.new_DutVerilatorBase(*args))
    __swig_destroy__ = _UT_Cache.delete_DutVerilatorBase

    def step_nodump(self):
        return _UT_Cache.DutVerilatorBase_step_nodump(self)

    def step(self, *args):
        return _UT_Cache.DutVerilatorBase_step(self, *args)

    def finalize(self):
        return _UT_Cache.DutVerilatorBase_finalize(self)

    def set_waveform(self, filename):
        return _UT_Cache.DutVerilatorBase_set_waveform(self, filename)

    def set_coverage(self, filename):
        return _UT_Cache.DutVerilatorBase_set_coverage(self, filename)

# Register DutVerilatorBase in _UT_Cache:
_UT_Cache.DutVerilatorBase_swigregister(DutVerilatorBase)
class DutUnifiedBase(DutVerilatorBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        if self.__class__ == DutUnifiedBase:
            _self = None
        else:
            _self = self
        _UT_Cache.DutUnifiedBase_swiginit(self, _UT_Cache.new_DutUnifiedBase(_self, *args))
    __swig_destroy__ = _UT_Cache.delete_DutUnifiedBase

    def finalize(self):
        return _UT_Cache.DutUnifiedBase_finalize(self)

    def set_waveform(self, filename):
        return _UT_Cache.DutUnifiedBase_set_waveform(self, filename)

    def set_coverage(self, filename):
        return _UT_Cache.DutUnifiedBase_set_coverage(self, filename)
    def __disown__(self):
        self.this.disown()
        _UT_Cache.disown_DutUnifiedBase(self)
        return weakref.proxy(self)

# Register DutUnifiedBase in _UT_Cache:
_UT_Cache.DutUnifiedBase_swigregister(DutUnifiedBase)

def get_clock(value):
    return _UT_Cache.get_clock(value)

def get_io_empty(value):
    return _UT_Cache.get_io_empty(value)

def get_io_flush(value):
    return _UT_Cache.get_io_flush(value)

def get_io_in_req_bits_addr(value):
    return _UT_Cache.get_io_in_req_bits_addr(value)

def get_io_in_req_bits_cmd(value):
    return _UT_Cache.get_io_in_req_bits_cmd(value)

def get_io_in_req_bits_size(value):
    return _UT_Cache.get_io_in_req_bits_size(value)

def get_io_in_req_bits_user(value):
    return _UT_Cache.get_io_in_req_bits_user(value)

def get_io_in_req_bits_wdata(value):
    return _UT_Cache.get_io_in_req_bits_wdata(value)

def get_io_in_req_bits_wmask(value):
    return _UT_Cache.get_io_in_req_bits_wmask(value)

def get_io_in_req_ready(value):
    return _UT_Cache.get_io_in_req_ready(value)

def get_io_in_req_valid(value):
    return _UT_Cache.get_io_in_req_valid(value)

def get_io_in_resp_bits_cmd(value):
    return _UT_Cache.get_io_in_resp_bits_cmd(value)

def get_io_in_resp_bits_rdata(value):
    return _UT_Cache.get_io_in_resp_bits_rdata(value)

def get_io_in_resp_bits_user(value):
    return _UT_Cache.get_io_in_resp_bits_user(value)

def get_io_in_resp_ready(value):
    return _UT_Cache.get_io_in_resp_ready(value)

def get_io_in_resp_valid(value):
    return _UT_Cache.get_io_in_resp_valid(value)

def get_io_mmio_req_bits_addr(value):
    return _UT_Cache.get_io_mmio_req_bits_addr(value)

def get_io_mmio_req_bits_cmd(value):
    return _UT_Cache.get_io_mmio_req_bits_cmd(value)

def get_io_mmio_req_bits_size(value):
    return _UT_Cache.get_io_mmio_req_bits_size(value)

def get_io_mmio_req_bits_wdata(value):
    return _UT_Cache.get_io_mmio_req_bits_wdata(value)

def get_io_mmio_req_bits_wmask(value):
    return _UT_Cache.get_io_mmio_req_bits_wmask(value)

def get_io_mmio_req_ready(value):
    return _UT_Cache.get_io_mmio_req_ready(value)

def get_io_mmio_req_valid(value):
    return _UT_Cache.get_io_mmio_req_valid(value)

def get_io_mmio_resp_bits_cmd(value):
    return _UT_Cache.get_io_mmio_resp_bits_cmd(value)

def get_io_mmio_resp_bits_rdata(value):
    return _UT_Cache.get_io_mmio_resp_bits_rdata(value)

def get_io_mmio_resp_ready(value):
    return _UT_Cache.get_io_mmio_resp_ready(value)

def get_io_mmio_resp_valid(value):
    return _UT_Cache.get_io_mmio_resp_valid(value)

def get_io_out_coh_req_bits_addr(value):
    return _UT_Cache.get_io_out_coh_req_bits_addr(value)

def get_io_out_coh_req_bits_cmd(value):
    return _UT_Cache.get_io_out_coh_req_bits_cmd(value)

def get_io_out_coh_req_bits_size(value):
    return _UT_Cache.get_io_out_coh_req_bits_size(value)

def get_io_out_coh_req_bits_wdata(value):
    return _UT_Cache.get_io_out_coh_req_bits_wdata(value)

def get_io_out_coh_req_bits_wmask(value):
    return _UT_Cache.get_io_out_coh_req_bits_wmask(value)

def get_io_out_coh_req_ready(value):
    return _UT_Cache.get_io_out_coh_req_ready(value)

def get_io_out_coh_req_valid(value):
    return _UT_Cache.get_io_out_coh_req_valid(value)

def get_io_out_coh_resp_bits_cmd(value):
    return _UT_Cache.get_io_out_coh_resp_bits_cmd(value)

def get_io_out_coh_resp_bits_rdata(value):
    return _UT_Cache.get_io_out_coh_resp_bits_rdata(value)

def get_io_out_coh_resp_ready(value):
    return _UT_Cache.get_io_out_coh_resp_ready(value)

def get_io_out_coh_resp_valid(value):
    return _UT_Cache.get_io_out_coh_resp_valid(value)

def get_io_out_mem_req_bits_addr(value):
    return _UT_Cache.get_io_out_mem_req_bits_addr(value)

def get_io_out_mem_req_bits_cmd(value):
    return _UT_Cache.get_io_out_mem_req_bits_cmd(value)

def get_io_out_mem_req_bits_size(value):
    return _UT_Cache.get_io_out_mem_req_bits_size(value)

def get_io_out_mem_req_bits_wdata(value):
    return _UT_Cache.get_io_out_mem_req_bits_wdata(value)

def get_io_out_mem_req_bits_wmask(value):
    return _UT_Cache.get_io_out_mem_req_bits_wmask(value)

def get_io_out_mem_req_ready(value):
    return _UT_Cache.get_io_out_mem_req_ready(value)

def get_io_out_mem_req_valid(value):
    return _UT_Cache.get_io_out_mem_req_valid(value)

def get_io_out_mem_resp_bits_cmd(value):
    return _UT_Cache.get_io_out_mem_resp_bits_cmd(value)

def get_io_out_mem_resp_bits_rdata(value):
    return _UT_Cache.get_io_out_mem_resp_bits_rdata(value)

def get_io_out_mem_resp_ready(value):
    return _UT_Cache.get_io_out_mem_resp_ready(value)

def get_io_out_mem_resp_valid(value):
    return _UT_Cache.get_io_out_mem_resp_valid(value)

def get_reset(value):
    return _UT_Cache.get_reset(value)

def get_victim_way_mask(value):
    return _UT_Cache.get_victim_way_mask(value)

def get_victim_way_mask_valid(value):
    return _UT_Cache.get_victim_way_mask_valid(value)

def set_clock(value):
    return _UT_Cache.set_clock(value)

def set_io_empty(value):
    return _UT_Cache.set_io_empty(value)

def set_io_flush(value):
    return _UT_Cache.set_io_flush(value)

def set_io_in_req_bits_addr(value):
    return _UT_Cache.set_io_in_req_bits_addr(value)

def set_io_in_req_bits_cmd(value):
    return _UT_Cache.set_io_in_req_bits_cmd(value)

def set_io_in_req_bits_size(value):
    return _UT_Cache.set_io_in_req_bits_size(value)

def set_io_in_req_bits_user(value):
    return _UT_Cache.set_io_in_req_bits_user(value)

def set_io_in_req_bits_wdata(value):
    return _UT_Cache.set_io_in_req_bits_wdata(value)

def set_io_in_req_bits_wmask(value):
    return _UT_Cache.set_io_in_req_bits_wmask(value)

def set_io_in_req_ready(value):
    return _UT_Cache.set_io_in_req_ready(value)

def set_io_in_req_valid(value):
    return _UT_Cache.set_io_in_req_valid(value)

def set_io_in_resp_bits_cmd(value):
    return _UT_Cache.set_io_in_resp_bits_cmd(value)

def set_io_in_resp_bits_rdata(value):
    return _UT_Cache.set_io_in_resp_bits_rdata(value)

def set_io_in_resp_bits_user(value):
    return _UT_Cache.set_io_in_resp_bits_user(value)

def set_io_in_resp_ready(value):
    return _UT_Cache.set_io_in_resp_ready(value)

def set_io_in_resp_valid(value):
    return _UT_Cache.set_io_in_resp_valid(value)

def set_io_mmio_req_bits_addr(value):
    return _UT_Cache.set_io_mmio_req_bits_addr(value)

def set_io_mmio_req_bits_cmd(value):
    return _UT_Cache.set_io_mmio_req_bits_cmd(value)

def set_io_mmio_req_bits_size(value):
    return _UT_Cache.set_io_mmio_req_bits_size(value)

def set_io_mmio_req_bits_wdata(value):
    return _UT_Cache.set_io_mmio_req_bits_wdata(value)

def set_io_mmio_req_bits_wmask(value):
    return _UT_Cache.set_io_mmio_req_bits_wmask(value)

def set_io_mmio_req_ready(value):
    return _UT_Cache.set_io_mmio_req_ready(value)

def set_io_mmio_req_valid(value):
    return _UT_Cache.set_io_mmio_req_valid(value)

def set_io_mmio_resp_bits_cmd(value):
    return _UT_Cache.set_io_mmio_resp_bits_cmd(value)

def set_io_mmio_resp_bits_rdata(value):
    return _UT_Cache.set_io_mmio_resp_bits_rdata(value)

def set_io_mmio_resp_ready(value):
    return _UT_Cache.set_io_mmio_resp_ready(value)

def set_io_mmio_resp_valid(value):
    return _UT_Cache.set_io_mmio_resp_valid(value)

def set_io_out_coh_req_bits_addr(value):
    return _UT_Cache.set_io_out_coh_req_bits_addr(value)

def set_io_out_coh_req_bits_cmd(value):
    return _UT_Cache.set_io_out_coh_req_bits_cmd(value)

def set_io_out_coh_req_bits_size(value):
    return _UT_Cache.set_io_out_coh_req_bits_size(value)

def set_io_out_coh_req_bits_wdata(value):
    return _UT_Cache.set_io_out_coh_req_bits_wdata(value)

def set_io_out_coh_req_bits_wmask(value):
    return _UT_Cache.set_io_out_coh_req_bits_wmask(value)

def set_io_out_coh_req_ready(value):
    return _UT_Cache.set_io_out_coh_req_ready(value)

def set_io_out_coh_req_valid(value):
    return _UT_Cache.set_io_out_coh_req_valid(value)

def set_io_out_coh_resp_bits_cmd(value):
    return _UT_Cache.set_io_out_coh_resp_bits_cmd(value)

def set_io_out_coh_resp_bits_rdata(value):
    return _UT_Cache.set_io_out_coh_resp_bits_rdata(value)

def set_io_out_coh_resp_ready(value):
    return _UT_Cache.set_io_out_coh_resp_ready(value)

def set_io_out_coh_resp_valid(value):
    return _UT_Cache.set_io_out_coh_resp_valid(value)

def set_io_out_mem_req_bits_addr(value):
    return _UT_Cache.set_io_out_mem_req_bits_addr(value)

def set_io_out_mem_req_bits_cmd(value):
    return _UT_Cache.set_io_out_mem_req_bits_cmd(value)

def set_io_out_mem_req_bits_size(value):
    return _UT_Cache.set_io_out_mem_req_bits_size(value)

def set_io_out_mem_req_bits_wdata(value):
    return _UT_Cache.set_io_out_mem_req_bits_wdata(value)

def set_io_out_mem_req_bits_wmask(value):
    return _UT_Cache.set_io_out_mem_req_bits_wmask(value)

def set_io_out_mem_req_ready(value):
    return _UT_Cache.set_io_out_mem_req_ready(value)

def set_io_out_mem_req_valid(value):
    return _UT_Cache.set_io_out_mem_req_valid(value)

def set_io_out_mem_resp_bits_cmd(value):
    return _UT_Cache.set_io_out_mem_resp_bits_cmd(value)

def set_io_out_mem_resp_bits_rdata(value):
    return _UT_Cache.set_io_out_mem_resp_bits_rdata(value)

def set_io_out_mem_resp_ready(value):
    return _UT_Cache.set_io_out_mem_resp_ready(value)

def set_io_out_mem_resp_valid(value):
    return _UT_Cache.set_io_out_mem_resp_valid(value)

def set_reset(value):
    return _UT_Cache.set_reset(value)

def set_victim_way_mask(value):
    return _UT_Cache.set_victim_way_mask(value)

def set_victim_way_mask_valid(value):
    return _UT_Cache.set_victim_way_mask_valid(value)
DPIRclock = _UT_Cache.DPIRclock
DPIWclock = _UT_Cache.DPIWclock
DPIRreset = _UT_Cache.DPIRreset
DPIWreset = _UT_Cache.DPIWreset
DPIRio_in_req_ready = _UT_Cache.DPIRio_in_req_ready
DPIWio_in_req_ready = _UT_Cache.DPIWio_in_req_ready
DPIRio_in_req_valid = _UT_Cache.DPIRio_in_req_valid
DPIWio_in_req_valid = _UT_Cache.DPIWio_in_req_valid
DPIRio_in_req_bits_addr = _UT_Cache.DPIRio_in_req_bits_addr
DPIWio_in_req_bits_addr = _UT_Cache.DPIWio_in_req_bits_addr
DPIRio_in_req_bits_size = _UT_Cache.DPIRio_in_req_bits_size
DPIWio_in_req_bits_size = _UT_Cache.DPIWio_in_req_bits_size
DPIRio_in_req_bits_cmd = _UT_Cache.DPIRio_in_req_bits_cmd
DPIWio_in_req_bits_cmd = _UT_Cache.DPIWio_in_req_bits_cmd
DPIRio_in_req_bits_wmask = _UT_Cache.DPIRio_in_req_bits_wmask
DPIWio_in_req_bits_wmask = _UT_Cache.DPIWio_in_req_bits_wmask
DPIRio_in_req_bits_wdata = _UT_Cache.DPIRio_in_req_bits_wdata
DPIWio_in_req_bits_wdata = _UT_Cache.DPIWio_in_req_bits_wdata
DPIRio_in_req_bits_user = _UT_Cache.DPIRio_in_req_bits_user
DPIWio_in_req_bits_user = _UT_Cache.DPIWio_in_req_bits_user
DPIRio_in_resp_ready = _UT_Cache.DPIRio_in_resp_ready
DPIWio_in_resp_ready = _UT_Cache.DPIWio_in_resp_ready
DPIRio_in_resp_valid = _UT_Cache.DPIRio_in_resp_valid
DPIWio_in_resp_valid = _UT_Cache.DPIWio_in_resp_valid
DPIRio_in_resp_bits_cmd = _UT_Cache.DPIRio_in_resp_bits_cmd
DPIWio_in_resp_bits_cmd = _UT_Cache.DPIWio_in_resp_bits_cmd
DPIRio_in_resp_bits_rdata = _UT_Cache.DPIRio_in_resp_bits_rdata
DPIWio_in_resp_bits_rdata = _UT_Cache.DPIWio_in_resp_bits_rdata
DPIRio_in_resp_bits_user = _UT_Cache.DPIRio_in_resp_bits_user
DPIWio_in_resp_bits_user = _UT_Cache.DPIWio_in_resp_bits_user
DPIRio_flush = _UT_Cache.DPIRio_flush
DPIWio_flush = _UT_Cache.DPIWio_flush
DPIRio_out_mem_req_ready = _UT_Cache.DPIRio_out_mem_req_ready
DPIWio_out_mem_req_ready = _UT_Cache.DPIWio_out_mem_req_ready
DPIRio_out_mem_req_valid = _UT_Cache.DPIRio_out_mem_req_valid
DPIWio_out_mem_req_valid = _UT_Cache.DPIWio_out_mem_req_valid
DPIRio_out_mem_req_bits_addr = _UT_Cache.DPIRio_out_mem_req_bits_addr
DPIWio_out_mem_req_bits_addr = _UT_Cache.DPIWio_out_mem_req_bits_addr
DPIRio_out_mem_req_bits_size = _UT_Cache.DPIRio_out_mem_req_bits_size
DPIWio_out_mem_req_bits_size = _UT_Cache.DPIWio_out_mem_req_bits_size
DPIRio_out_mem_req_bits_cmd = _UT_Cache.DPIRio_out_mem_req_bits_cmd
DPIWio_out_mem_req_bits_cmd = _UT_Cache.DPIWio_out_mem_req_bits_cmd
DPIRio_out_mem_req_bits_wmask = _UT_Cache.DPIRio_out_mem_req_bits_wmask
DPIWio_out_mem_req_bits_wmask = _UT_Cache.DPIWio_out_mem_req_bits_wmask
DPIRio_out_mem_req_bits_wdata = _UT_Cache.DPIRio_out_mem_req_bits_wdata
DPIWio_out_mem_req_bits_wdata = _UT_Cache.DPIWio_out_mem_req_bits_wdata
DPIRio_out_mem_resp_ready = _UT_Cache.DPIRio_out_mem_resp_ready
DPIWio_out_mem_resp_ready = _UT_Cache.DPIWio_out_mem_resp_ready
DPIRio_out_mem_resp_valid = _UT_Cache.DPIRio_out_mem_resp_valid
DPIWio_out_mem_resp_valid = _UT_Cache.DPIWio_out_mem_resp_valid
DPIRio_out_mem_resp_bits_cmd = _UT_Cache.DPIRio_out_mem_resp_bits_cmd
DPIWio_out_mem_resp_bits_cmd = _UT_Cache.DPIWio_out_mem_resp_bits_cmd
DPIRio_out_mem_resp_bits_rdata = _UT_Cache.DPIRio_out_mem_resp_bits_rdata
DPIWio_out_mem_resp_bits_rdata = _UT_Cache.DPIWio_out_mem_resp_bits_rdata
DPIRio_out_coh_req_ready = _UT_Cache.DPIRio_out_coh_req_ready
DPIWio_out_coh_req_ready = _UT_Cache.DPIWio_out_coh_req_ready
DPIRio_out_coh_req_valid = _UT_Cache.DPIRio_out_coh_req_valid
DPIWio_out_coh_req_valid = _UT_Cache.DPIWio_out_coh_req_valid
DPIRio_out_coh_req_bits_addr = _UT_Cache.DPIRio_out_coh_req_bits_addr
DPIWio_out_coh_req_bits_addr = _UT_Cache.DPIWio_out_coh_req_bits_addr
DPIRio_out_coh_req_bits_size = _UT_Cache.DPIRio_out_coh_req_bits_size
DPIWio_out_coh_req_bits_size = _UT_Cache.DPIWio_out_coh_req_bits_size
DPIRio_out_coh_req_bits_cmd = _UT_Cache.DPIRio_out_coh_req_bits_cmd
DPIWio_out_coh_req_bits_cmd = _UT_Cache.DPIWio_out_coh_req_bits_cmd
DPIRio_out_coh_req_bits_wmask = _UT_Cache.DPIRio_out_coh_req_bits_wmask
DPIWio_out_coh_req_bits_wmask = _UT_Cache.DPIWio_out_coh_req_bits_wmask
DPIRio_out_coh_req_bits_wdata = _UT_Cache.DPIRio_out_coh_req_bits_wdata
DPIWio_out_coh_req_bits_wdata = _UT_Cache.DPIWio_out_coh_req_bits_wdata
DPIRio_out_coh_resp_ready = _UT_Cache.DPIRio_out_coh_resp_ready
DPIWio_out_coh_resp_ready = _UT_Cache.DPIWio_out_coh_resp_ready
DPIRio_out_coh_resp_valid = _UT_Cache.DPIRio_out_coh_resp_valid
DPIWio_out_coh_resp_valid = _UT_Cache.DPIWio_out_coh_resp_valid
DPIRio_out_coh_resp_bits_cmd = _UT_Cache.DPIRio_out_coh_resp_bits_cmd
DPIWio_out_coh_resp_bits_cmd = _UT_Cache.DPIWio_out_coh_resp_bits_cmd
DPIRio_out_coh_resp_bits_rdata = _UT_Cache.DPIRio_out_coh_resp_bits_rdata
DPIWio_out_coh_resp_bits_rdata = _UT_Cache.DPIWio_out_coh_resp_bits_rdata
DPIRio_mmio_req_ready = _UT_Cache.DPIRio_mmio_req_ready
DPIWio_mmio_req_ready = _UT_Cache.DPIWio_mmio_req_ready
DPIRio_mmio_req_valid = _UT_Cache.DPIRio_mmio_req_valid
DPIWio_mmio_req_valid = _UT_Cache.DPIWio_mmio_req_valid
DPIRio_mmio_req_bits_addr = _UT_Cache.DPIRio_mmio_req_bits_addr
DPIWio_mmio_req_bits_addr = _UT_Cache.DPIWio_mmio_req_bits_addr
DPIRio_mmio_req_bits_size = _UT_Cache.DPIRio_mmio_req_bits_size
DPIWio_mmio_req_bits_size = _UT_Cache.DPIWio_mmio_req_bits_size
DPIRio_mmio_req_bits_cmd = _UT_Cache.DPIRio_mmio_req_bits_cmd
DPIWio_mmio_req_bits_cmd = _UT_Cache.DPIWio_mmio_req_bits_cmd
DPIRio_mmio_req_bits_wmask = _UT_Cache.DPIRio_mmio_req_bits_wmask
DPIWio_mmio_req_bits_wmask = _UT_Cache.DPIWio_mmio_req_bits_wmask
DPIRio_mmio_req_bits_wdata = _UT_Cache.DPIRio_mmio_req_bits_wdata
DPIWio_mmio_req_bits_wdata = _UT_Cache.DPIWio_mmio_req_bits_wdata
DPIRio_mmio_resp_ready = _UT_Cache.DPIRio_mmio_resp_ready
DPIWio_mmio_resp_ready = _UT_Cache.DPIWio_mmio_resp_ready
DPIRio_mmio_resp_valid = _UT_Cache.DPIRio_mmio_resp_valid
DPIWio_mmio_resp_valid = _UT_Cache.DPIWio_mmio_resp_valid
DPIRio_mmio_resp_bits_cmd = _UT_Cache.DPIRio_mmio_resp_bits_cmd
DPIWio_mmio_resp_bits_cmd = _UT_Cache.DPIWio_mmio_resp_bits_cmd
DPIRio_mmio_resp_bits_rdata = _UT_Cache.DPIRio_mmio_resp_bits_rdata
DPIWio_mmio_resp_bits_rdata = _UT_Cache.DPIWio_mmio_resp_bits_rdata
DPIRio_empty = _UT_Cache.DPIRio_empty
DPIWio_empty = _UT_Cache.DPIWio_empty
DPIRvictim_way_mask_valid = _UT_Cache.DPIRvictim_way_mask_valid
DPIWvictim_way_mask_valid = _UT_Cache.DPIWvictim_way_mask_valid
DPIRvictim_way_mask = _UT_Cache.DPIRvictim_way_mask
DPIWvictim_way_mask = _UT_Cache.DPIWvictim_way_mask

